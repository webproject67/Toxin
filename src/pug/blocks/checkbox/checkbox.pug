mixin checkbox(options)
  -
    const {checkboxs, listClassName, labelClassName} = options
    let letListClassName = 'checkbox__list'
    letListClassName += listClassName ? ` ${listClassName}` : ''
    let letLabelClassName = 'checkbox__label'
    letLabelClassName += labelClassName ? ` ${labelClassName}` : ''

  .checkbox
    ul(class= letListClassName) 
      each val in checkboxs
        li(class= val.className ? `checkbox__item ${val.className}` : 'checkbox__item')
          span.checkbox__figure 
          input(class="checkbox__checkbox visually-hidden--focusable" type="checkbox" id= val.id checked= val.checked)
          label(class= letLabelClassName for= val.id)= val.label
            if val.text
              p.checkbox__label--color2= val.text

mixin checkbox-toggle(options)
  -
    const {id, checked} = options

  .checkbox-toggle
    input(class="checkbox-toggle__checkbox visually-hidden--focusable" type="checkbox" id= id checked= checked)
    label(class="checkbox-toggle__label" for= id) Получать спецпредложения

mixin checkbox-list(options)
  -
    const {text, listClassName, iconClassName, checkboxs} = options
    let letIconClassName = 'font-icon checkbox-list__icon'
    letIconClassName += iconClassName ? ` ${iconClassName}` : ''

  .checkbox-list
    .checkbox-list__btn
      input(class="font-h3 checkbox-list__button" type="button" id="button" value= text)
      label(class="checkbox-list__label" for="button") 
        span(class= letIconClassName) expand_more
    +checkbox({
      listClassName: listClassName,
      checkboxs: checkboxs
    })